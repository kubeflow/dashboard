name: End-to-End Dashboard Integration Test
on:
  workflow_dispatch:
  pull_request:
    paths:
      - components/**
      - releasing/version/VERSION
      - .github/workflows/end_to_end_integration_test.yaml
    branches:
      - main
      - v*-branch
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.number }}
  cancel-in-progress: true

env:
  CENTRALDASHBOARD_IMG: ghcr.io/kubeflow/kubeflow/centraldashboard
  CENTRALDASHBOARD_ANGULAR_IMG: ghcr.io/kubeflow/kubeflow/centraldashboard-angular
  PROFILE_CONTROLLER_IMG: ghcr.io/kubeflow/kubeflow/profile-controller
  KFAM_IMG: ghcr.io/kubeflow/kubeflow/kfam
  ADMISSION_WEBHOOK_IMG: ghcr.io/kubeflow/kubeflow/poddefaults-webhook
  TAG: e2e-test

jobs:
  end-to-end-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install KinD
      run: ./testing/gh-actions/install_kind.sh

    - name: Create KinD Cluster
      run: kind create cluster --config testing/gh-actions/kind-1-33.yaml

    - name: Install kustomize
      run: ./testing/gh-actions/install_kustomize.sh

    - name: Install cert-manager
      run: ./testing/gh-actions/install_cert_manager.sh

    - name: Install Istio
      run: ./testing/gh-actions/install_istio.sh

    - name: Create Kubeflow Namespace
      run: kubectl create namespace kubeflow

    - name: Make Scripts Executable
      run: chmod +x testing/gh-actions/*.sh

    - name: Deploy Profile Controller Component
      run: |
        ./testing/gh-actions/deploy_component.sh \
          "profile-controller" \
          "components/profile-controller" \
          "${PROFILE_CONTROLLER_IMG}" \
          "${TAG}" \
          "config" \
          "overlays/kubeflow"

    - name: Wait for Profile Controller to be Ready
      run: |
        kubectl wait --for=condition=Available deployment -n kubeflow profiles-deployment --timeout=300s

    - name: Wait for Profile CRD to be Available
      run: |
        timeout=300
        interval=5
        elapsed=0
        while ! kubectl get crd profiles.kubeflow.org >/dev/null 2>&1; do
          if [ $elapsed -ge $timeout ]; then
            exit 1
          fi
          sleep $interval
          elapsed=$((elapsed + interval))
        done
        kubectl wait --for condition=established --timeout=60s crd/profiles.kubeflow.org

    - name: Wait for KFAM to be Ready
      run: |
        kubectl wait --for=condition=Ready pods -n kubeflow -l app=kfam --timeout=300s || {
          echo "KFAM pods not found with label app=kfam, checking for profiles-kfam service..."
          kubectl get service profiles-kfam -n kubeflow || {
            echo "KFAM service not found, KFAM might be deployed as part of profiles deployment"
            kubectl wait --for=condition=Ready pods -n kubeflow -l kustomize.component=profiles --timeout=300s
          }
        }

    - name: Deploy Admission Webhook Component
      run: |
        ./testing/gh-actions/deploy_component.sh \
          "admission-webhook" \
          "components/admission-webhook" \
          "${ADMISSION_WEBHOOK_IMG}" \
          "${TAG}" \
          "manifests" \
          "overlays/cert-manager"

    - name: Wait for Admission Webhook to be Ready
      run: |
        kubectl wait --for=condition=Available deployment -n kubeflow admission-webhook-deployment --timeout=300s

    - name: Deploy CentralDashboard Angular Component
      run: |
        ./testing/gh-actions/deploy_component.sh \
          "centraldashboard-angular" \
          "components/centraldashboard-angular" \
          "${CENTRALDASHBOARD_ANGULAR_IMG}" \
          "${TAG}" \
          "manifests" \
          "overlays/kserve"

    - name: Wait for CentralDashboard Angular to be Ready
      run: |
        kubectl wait --for=condition=Available deployment -n kubeflow centraldashboard-angular --timeout=300s

    - name: Deploy CentralDashboard Component
      run: |
        ./testing/gh-actions/deploy_component.sh \
          "centraldashboard" \
          "components/centraldashboard" \
          "${CENTRALDASHBOARD_IMG}" \
          "${TAG}" \
          "manifests" \
          "overlays/kserve"

    - name: Wait for CentralDashboard to be Ready
      run: |
        kubectl wait --for=condition=Available deployment -n kubeflow centraldashboard --timeout=300s

    - name: Create Test Profiles
      run: |
        ./testing/gh-actions/test_profile.sh create e2e-admin admin@example.com
        ./testing/gh-actions/test_profile.sh create-simple e2e-user user@example.com

    - name: Validate Profile Integration
      run: |
        ./testing/gh-actions/test_profile.sh validate e2e-admin
        ./testing/gh-actions/test_profile.sh validate e2e-user

    - name: Test PodDefault Integration
      run: |
        ./testing/gh-actions/test_poddefault.sh create-namespace e2e-test
        ./testing/gh-actions/test_poddefault.sh create-poddefault e2e-test e2e-poddefault
        ./testing/gh-actions/test_poddefault.sh test-mutation e2e-test e2e-poddefault e2e-test-pod

    - name: Test KFAM Service Integration
      run: |
        kubectl get services -n kubeflow | grep kfam || echo "No service found with 'kfam' in name"
        kubectl get services -n kubeflow -l kustomize.component=profiles || echo "No services found with profiles label"
        
        echo "Setting up port-forward to KFAM service..."
        POD_NAME=$(kubectl get pods -n kubeflow -l kustomize.component=profiles -o jsonpath="{.items[0].metadata.name}")
        if [ -n "$POD_NAME" ]; then
          echo "Found pod $POD_NAME for port-forwarding"
          kubectl port-forward -n kubeflow pod/$POD_NAME 8081:8081 &
          PF_PID=$!
          echo $PF_PID > /tmp/kfam_pf.pid
          sleep 5
          
          echo "Testing KFAM service health..."
          curl -v http://localhost:8081/kfam/healthz || curl -v http://localhost:8081/kfam/version || curl -v http://localhost:8081/kfam/ || curl -v http://localhost:8081/metrics || curl -v http://localhost:8081/
          
          echo "Testing KFAM API with user context..."
          curl -v -H "kubeflow-userid: admin@example.com" http://localhost:8081/kfam/v1/bindings?namespace=e2e-admin
          
          if [ -f "/tmp/kfam_pf.pid" ]; then
            kill $(cat /tmp/kfam_pf.pid)
            rm -f /tmp/kfam_pf.pid
          fi
        else
          echo "No profiles pods found for port-forwarding"
          exit 1
        fi

    - name: Test CentralDashboard Angular Integration
      run: |
        ./testing/gh-actions/test_service.sh port-forward centraldashboard-angular kubeflow 8082 80
        ./testing/gh-actions/test_service.sh test-health centraldashboard-angular kubeflow 8082
        ./testing/gh-actions/test_service.sh test-dashboard centraldashboard-angular kubeflow 8082
        ./testing/gh-actions/test_service.sh stop-port-forward centraldashboard-angular kubeflow 8082

    - name: Test CentralDashboard Integration
      run: |
        ./testing/gh-actions/test_service.sh port-forward centraldashboard kubeflow 8083 80
        ./testing/gh-actions/test_service.sh test-health centraldashboard kubeflow 8083
        ./testing/gh-actions/test_service.sh test-dashboard centraldashboard kubeflow 8083
        ./testing/gh-actions/test_service.sh performance-test centraldashboard kubeflow 8083 80 15
        ./testing/gh-actions/test_service.sh stop-port-forward centraldashboard kubeflow 8083

    - name: Test Profile Update with Dashboard Access
      run: |
        ./testing/gh-actions/test_profile.sh update e2e-admin
        # Test that profile updates don't break dashboard access
        ./testing/gh-actions/test_service.sh port-forward centraldashboard kubeflow 8084 80
        ./testing/gh-actions/test_service.sh test-health centraldashboard kubeflow 8084
        ./testing/gh-actions/test_service.sh stop-port-forward centraldashboard kubeflow 8084

    - name: Check Component Health and Logs
      run: |
        ./testing/gh-actions/test_service.sh check-logs profiles-deployment kubeflow 30
        
        kubectl logs -n kubeflow -l kustomize.component=profiles -c kfam --tail=30 || kubectl logs -n kubeflow -l app=kfam --tail=30
        
        ./testing/gh-actions/test_service.sh check-logs admission-webhook-deployment kubeflow 30
        
        ./testing/gh-actions/test_service.sh check-logs centraldashboard-angular kubeflow 30
        
        ./testing/gh-actions/test_service.sh check-logs centraldashboard kubeflow 30

    - name: Check for Component Errors
      run: |
        ./testing/gh-actions/test_service.sh check-errors profiles-deployment kubeflow
        kubectl logs -n kubeflow -l kustomize.component=profiles -c kfam --tail=100 | grep -i error 
        ./testing/gh-actions/test_service.sh check-errors admission-webhook-deployment kubeflow
        ./testing/gh-actions/test_service.sh check-errors centraldashboard-angular kubeflow
        ./testing/gh-actions/test_service.sh check-errors centraldashboard kubeflow

    - name: Final Integration Validation
      run: |
        ./testing/gh-actions/test_profile.sh list
        
        kubectl get services -n kubeflow
        
        kubectl get deployments -n kubeflow
        
        kubectl get nodes
        kubectl get pods -A

    # Cleanup
    - name: Cleanup Test Resources
      run: |
        ./testing/gh-actions/test_poddefault.sh cleanup e2e-test
        ./testing/gh-actions/test_profile.sh delete e2e-admin
        ./testing/gh-actions/test_profile.sh delete e2e-user 
name: Build & Publish PodDefaults Docker image
on:
  workflow_dispatch:  ## need to be removed.
  push:
    branches:
      - main
      - v*-branch
    paths:
      - components/admission-webhook/**
      - releasing/version/VERSION

env:
  IMG: ghcr.io/kubeflow/kubeflow/poddefaults-webhook
  ARCH: linux/amd64,linux/ppc64le,linux/arm64/v8

jobs:
  push_to_registry:
    name: Build & Push image to GHCR
    runs-on: ubuntu-22.04
    steps:

    - name: Set registry and credentials  # To be removed
      id: registry
      run: |
        echo "registry=${{ secrets.FORK_REGISTRY || 'docker.io' }}" >> $GITHUB_OUTPUT
        echo "username=${{ secrets.FORK_REGISTRY_USERNAME }}" >> $GITHUB_OUTPUT
        echo "password=${{ secrets.FORK_REGISTRY_PASSWORD }}" >> $GITHUB_OUTPUT
        echo "image=${{ secrets.FORK_IMAGE || format('docker.io/{0}/kubeflow-dashboard-lweiss-fork', secrets.FORK_REGISTRY_USERNAME) }}" >> $GITHUB_OUTPUT


    - name: Checkout
      uses: actions/checkout@v4

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          version:
            - 'releasing/version/VERSION'

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        # registry: ghcr.io
        # username: ${{ github.actor }}
        # password: ${{ secrets.GITHUB_TOKEN }}
        registry: ${{ steps.registry.outputs.registry }} 
        username: ${{ steps.registry.outputs.username }} 
        password: ${{ steps.registry.outputs.password }} 


    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push multi-arch docker image
      run: |
        cd components/admission-webhook
        ARCH=linux/amd64 make IMG=${{ steps.registry.outputs.image }} docker-build-multi-arch
        ARCH=linux/ppc64le make IMG=${{ steps.registry.outputs.image }} docker-build-multi-arch
        ARCH=linux/arm64/v8 make IMG=${{ steps.registry.outputs.image }} docker-build-multi-arch
        make IMG=${{ steps.registry.outputs.image }} docker-build-push-multi-arch

##        ARCH=linux/amd64 make docker-build-multi-arch
##        ARCH=linux/ppc64le make docker-build-multi-arch
##        ARCH=linux/arm64/v8 make docker-build-multi-arch
##        make docker-build-push-multi-arch


    - name: Build and push latest multi-arch docker image
      if: github.ref == 'refs/heads/main'
      run: |
        export TAG=latest
        cd components/admission-webhook
        make IMG=${{ steps.registry.outputs.image }} docker-build-push-multi-arch 
 #       make docker-build-push-multi-arch

    - name: Build and push multi-arch image on Version change
      id: version
      if: steps.filter.outputs.version == 'true'
      run: |
        export TAG=$(cat releasing/version/VERSION)
        cd components/admission-webhook
        make IMG=${{ steps.registry.outputs.image }} docker-build-push-multi-arch 
 #       make docker-build-push-multi-arch 